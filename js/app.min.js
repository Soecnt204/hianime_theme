
// app.min.js â€” Safe UI interactions only
document.addEventListener('DOMContentLoaded', function(){
  const debug = document.getElementById('debug');
  function log(msg){ if(debug) debug.textContent = 'JS: ' + msg; console.log(msg); }

  // Safe search handler
  const input = document.getElementById('searchInput');
  const btn = document.getElementById('searchBtn');
  function doSearch(){
    const q = input ? input.value.trim() : '';
    if(!q){ alert('Type something to search (demo)'); return; }
    // For demo, show results in console and update debug
    log('search: ' + q);
    alert('Search simulated for: ' + q + '\nThis is a demo. No streaming.');
  }
  if(btn) btn.addEventListener('click', doSearch);
  if(input) input.addEventListener('keydown', function(e){
    if(e.key === 'Enter') doSearch();
  });

  // populate demo cards (safe placeholders)
  const grid = document.getElementById('grid');
  const epsGrid = document.getElementById('epsGrid');
  const related = document.getElementById('relatedGrid');
  const sample = new Array(9).fill(0).map((_,i)=>({
    title: 'Demo Item ' + (i+1),
    img: 'images/level-a-4.png',
    link: 'anime_detail.html'
  }));
  function makeCard(item){
    const el = document.createElement('div'); el.className='card';
    el.innerHTML = '<img src="'+item.img+'" alt=""><div class="meta"><div class="title">'+item.title+'</div><div class="badge">Demo</div></div>';
    el.addEventListener('click', ()=>{ window.location = item.link; });
    return el;
  }
  if(grid){
    sample.slice(0,8).forEach(s=>grid.appendChild(makeCard(s)));
  }
  if(epsGrid){
    for(let i=1;i<=12;i++){
      const el = document.createElement('div'); el.className='card';
      el.innerHTML = '<div style="padding:14px"><div class="title">Episode '+i+'</div><div class="badge">Sub</div></div>';
      el.addEventListener('click', ()=>{ window.location = '../watch/watch.html?ep='+i; });
      epsGrid.appendChild(el);
    }
  }
  if(related){
    sample.slice(0,6).forEach(s=>related.appendChild(makeCard(s)));
  }

  // service worker registration (guarded)
  if('serviceWorker' in navigator){
    navigator.serviceWorker.register('/watch/manifest.json').then(()=>log('sw registered')).catch(()=>log('sw reg failed'));
  } else {
    log('sw not supported');
  }

  log('ready');
});
